version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          RAILS_ENV: test
    steps:
      # コードのチェックアウト
      - checkout

      # bundle installのキャシュがあればそれを取ってくる
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache

      # bundle installの実行
      - run:
          name: Bundle Install
          command: bundle check --path=vendor/bundle || bundle install --path vendor/bundle --clean --jobs 4 --retry 3

      # bundle installのデータをキャッシュ
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      # 初期設定
      - run:
          name: Database setup
          command: |
            bundle exec rails db:create
            bundle exec rails db:migrate

      # テストの実行
      - run:
          name: Rails Test
          command: bundle exec rails test
        
  deploy-prod: #本番環境への実行内容　Herokuアプリ名の環境変数値だけが違う
    machine:
      image: circleci/classic:edge
    steps:
    - checkout
    - run:
        name: heroku maintenance on
        command: heroku maintenance:on --app ${HEROKU_APP_NAME_PROD}
    - run:
        name: heroku deploy
        command: |
          git subtree push --prefix myapp  https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PROD.git master
    - run:
        name: heroku maintenance off
        command: heroku maintenance:off --app ${HEROKU_APP_NAME_PROD}
workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build
    - deploy-prod:
        requires:
        - build
        filters:
          branches:
            only: master # masterブランチの変更に対してのみdeploy-prodジョブ実行
      